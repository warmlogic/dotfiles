{
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "launch": {
        "configurations": [],
        "compounds": []
    },
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.associations": {
        ".env": "shellscript",
        "*.env": "shellscript"
    },
    "files.exclude": {
        "**/__pycache__": true,
        "**/.ipynb_checkpoints": true,
        "**/.mypy_cache": true
    },
    "editor.scrollBeyondLastLine": false,
    "editor.renderWhitespace": "boundary",
    "editor.wordWrap": "on",
    "editor.wordWrapColumn": 120,
    "editor.quickSuggestionsDelay": 250,
    "editor.suggestSelection": "first",
    "editor.accessibilitySupport": "off",
    "editor.rulers": [
        100
    ],
    "breadcrumbs.enabled": true,
    "workbench.colorTheme": "Dracula",
    "workbench.statusBar.visible": true,
    "workbench.activityBar.visible": true,
    "workbench.startupEditor": "none",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.editor.untitled.hint": "hidden",
    "search.showLineNumbers": true,
    "extensions.ignoreRecommendations": false,

    // Don't report to MS
    "telemetry.telemetryLevel": "off",

    // Terminal
    "terminal.integrated.inheritEnv": false,

    // -------- Python --------
    "autoDocstring.docstringFormat": "numpy",
    "autoDocstring.includeName": true,
    "python.envFile": "${workspaceFolder}",
    "python.languageServer": "Pylance",
    "python.testing.pytestEnabled": false,
    "python.pythonPath": "/Users/matt/miniconda/bin/python",
    "python.condaPath": "/Users/matt/miniconda/bin/conda",
    "python.venvPath": "/Users/matt/miniconda/envs",
    "python.autoComplete.extraPaths": [],
    "python.analysis.extraPaths": [],
    "python.analysis.logLevel": "Warning",
    // Linting
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": [
        "--extend-ignore=E203,W503",
        "--max-line-length=100",
        "--max-complexity=15"
    ],
    // Formatting
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length=100"
    ],
    "python.sortImports.args": [
        "--profile=black",
        "--line-length=88"
    ],
    "[python]": {
        "editor.formatOnPaste": false,
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "file",
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
    },
    // Jupyter
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    "jupyter.sendSelectionToInteractiveWindow": true,
    "jupyter.runStartupCommands": [
        "%config IPCompleter.use_jedi = False",
        "%load_ext autoreload",
        "%autoreload 2"
    ],
    "jupyter.changeDirOnImportExport": true,
    "jupyter.askForKernelRestart": true,
    "jupyter.disableJupyterAutoStart": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    // -------- Remote VSCode configuration --------
    // Port number to use for connection.
    "remote.port": 52698,
    // Address to listen on.
    "remote.host": "127.0.0.1",
    // If set to true, error for remote.port already in use won't be shown anymore.
    "remote.dontShowPortAlreadyInUseError": true,

    // -------- Markdown --------
    // Linting
    "markdownlint.run": "onSave",
    "markdownlint.config": {
        "default": true,
        "MD004": false, // Unordered List Style
        "MD007": { "indent": 2 }, // Unordered List Indentation
        "MD013": false, // Line Length
    },
    // Formatting
    "markdown.extension.orderedList.marker": "one",

    // -------- Source Control --------
    "gitlens.showWhatsNewAfterUpgrades": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.hovers.enabled": false,
    "gitlens.hovers.currentLine.over": "line",

    // -------- Ruby --------
    "solargraph.checkGemVersion": false,

    // -------- Terraform --------
    "terraform.languageServer": {
        "external": true,
        "args": [
            "serve"
        ]
    },

    // -------- Spelling --------
    "spellright.documentTypes": [
        "markdown",
        "latex",
    ],
    "spellright.ignoreFiles": [
        "**/*.csv",
        "**/*.json*",
        "**/.gitignore",
        "**/.spellignore"
    ],

    // -------- TODO Tree --------
    "todo-tree.highlights.enabled": true,
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",

    // -------- Other --------
    "docker.showStartPage": false,
    "security.workspace.trust.untrustedFiles": "open",
    "pgFormatter.commaBreak": true,
    "pgFormatter.noGrouping": true,
    "pgFormatter.commaEnd": false,
    "pgFormatter.commaStart": true,
    "pgFormatter.spaces": 4,
}
